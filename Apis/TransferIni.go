package main

import (
	"log"
	"strings"
	// "os"
	// "encoding/json"
	"github.com/tidwall/gjson"
	"io/ioutil"
	// "reflect"
)

type Pages struct {
	Chars []WordStr `json:"chars"`
}

type WordStr struct {
	Y         int    `json:"y"`
	X         int    `json:"x"`
	Rotation  int    `json:"rotation"`
	Character string `json:"character"`
	Size      int    `json:"size"`
}

type AutoGenerated struct {
	Padding int     `json:"padding"`
	Pages   []Pages `json:"pages"`
}

type TmpJson struct {
	Art []string `json:"layers"`
}

type TmpContext struct {
	Obj       string
	Pname     string
	Slug      string
	Height    int
	Layers    string
	Color     string
	Word      string
	imagePath string
}

func main() {
	f, err := ioutil.ReadFile("C:/Users/FD_XU/Desktop/index.html")
	if err != nil {
		log.Println(err.Error())
	}

	tmp := string(f)
	start_num := strings.Index(tmp, "SMApp(")
	end_num := strings.Index(tmp, "}) });")

	tmps := tmp[start_num+6 : end_num+1]
	// log.Println(tmps)
	log.Println(gjson.Get(tmps, "scale"))
	log.Println(gjson.Get(tmps, "artboards"))

	// var Tms TmpJson
	// // var Aut TmpContext
	// json.Unmarshal([]byte(tmps), &Tms)

	// artboards := Tms.Art
	// // Aut = artboards[0]
	// log.Println(reflect.TypeOf(artboards))
	// log.Println(artboards)
	// log.Println(mm)
	// for i := 0; i < len(artboards); i++ {
	// 	log.Println(artboards[i])
	// }
}
